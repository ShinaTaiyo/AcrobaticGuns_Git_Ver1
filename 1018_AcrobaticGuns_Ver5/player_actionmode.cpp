//===================================================================================================================
//
//１１月１０日：プレイヤーのアクションモードクラスを作る[player_actionmode.cpp]
//Author:ShinaTaiyo
//
//===================================================================================================================

//===============================================================
//インクルード
//===============================================================
#include "player_actionmode.h"
#include "texture.h"
#include "calculation.h"
#include "manager.h"
#include "attack.h"
#include "input.h"
#include "lockon.h"
#include "player.h"
//===================================================================================================================

//*******************************************************************************************************************
//スーパークラス
//*******************************************************************************************************************

//===============================================================
//コンストラクタ
//===============================================================
CPlayer_ActionMode::CPlayer_ActionMode()
{

}
//===================================================================================================================

//===============================================================
//デストラクタ
//===============================================================
CPlayer_ActionMode::~CPlayer_ActionMode()
{

}
//===================================================================================================================

//===============================================================
//初期化処理
//===============================================================
HRESULT CPlayer_ActionMode::Init()
{
	SetUseDeath(false);//死亡フラグを使用しない
	CObject2D::Init();
	return S_OK;
}
//===================================================================================================================

//===============================================================
//終了処理
//===============================================================
void CPlayer_ActionMode::Uninit()
{
	CObject2D::Uninit();
}
//===================================================================================================================

//===============================================================
//更新処理
//===============================================================
void CPlayer_ActionMode::Update()
{
	CObject2D::Update();
}
//===================================================================================================================

//===============================================================
//描画処理
//===============================================================
void CPlayer_ActionMode::Draw()
{
	CObject2D::Draw();
}
//===================================================================================================================

//===============================================================
//死亡フラグ設定処理
//===============================================================
void CPlayer_ActionMode::SetDeath()
{
	CObject::SetDeath();
}
//===================================================================================================================

//*******************************************************************************************************************
//射撃クラス
//*******************************************************************************************************************


//===============================================================
//コンストラクタ
//===============================================================
CPlayerShot::CPlayerShot()
{

}
//===================================================================================================================

//===============================================================
//デストラクタ
//===============================================================
CPlayerShot::~CPlayerShot()
{

}
//===================================================================================================================

//===============================================================
//初期化処理
//===============================================================
HRESULT CPlayerShot::Init()
{
	CPlayer_ActionMode::Init();
	return S_OK;
}
//===================================================================================================================

//===============================================================
//終了処理
//===============================================================
void CPlayerShot::Uninit()
{
	CPlayer_ActionMode::Uninit();
}
//===================================================================================================================

//===============================================================
//更新処理
//===============================================================
void CPlayerShot::Update()
{
	CPlayer_ActionMode::Update();
}
//===================================================================================================================

//===============================================================
//描画処理
//===============================================================
void CPlayerShot::Draw()
{
	CPlayer_ActionMode::Draw();
}
//===================================================================================================================

//===============================================================
//死亡フラグ設定処理
//===============================================================
void CPlayerShot::SetDeath()
{
	CPlayer_ActionMode::SetDeath();
}
//===================================================================================================================

//===============================================================
//死亡フラグ設定処理
//===============================================================
CPlayerShot* CPlayerShot::Create(const CObject2D::POLYGONTYPE PolygonType, D3DXCOLOR col, const D3DXVECTOR3 Pos, const float fWidth, const float fHeight)
{
	CPlayerShot* pPlayerShot = DBG_NEW CPlayerShot;
	CTexture* pTexture = CManager::GetTexture();
	pPlayerShot->Init();//初期化処理
	pPlayerShot->SetUseLife(false, 1, 1);//体力を使用しない
	pPlayerShot->SetPos(Pos);       //位置
	pPlayerShot->SetSupportPos(Pos);//支点位置
	pPlayerShot->SetInfo(1, 1, fWidth, fHeight, col, PolygonType, true);//ポリゴンとテクスチャ情報を設定
	pPlayerShot->SetTextureIndex(pTexture->Regist("data\\TEXTURE\\UI\\Gun_000.png"));//テクスチャの登録と番号の設定
	pPlayerShot->BindTexture(pTexture->GetAddress(pPlayerShot->GetTextureIndex()));//テクスチャの割り当て
	return pPlayerShot;
}
//===================================================================================================================

//===============================================================
//攻撃処理
//===============================================================
void CPlayerShot::Attack(CPlayer* pPlayer)
{
	CLockon* pLockon = pPlayer->GetLockOn();
	D3DXVECTOR3 ShotPos = pPlayer->GetPos() + D3DXVECTOR3(0.0f, pPlayer->GetVtxMax().y, 0.0f);
	D3DXVECTOR3 Move = CCalculation::Calculation3DVec(ShotPos, pLockon->GetNearRayColObjPos(), 20.0f);
	CAttackPlayer* pAttackPlayer = nullptr;//プレイヤー攻撃へのポインタ
	if (CManager::GetInputKeyboard()->GetTrigger(DIK_J) == true || CManager::GetInputJoypad()->GetRT_Repeat(6) == true)
	{
		pAttackPlayer = CAttackPlayer::Create(CAttack::ATTACKTYPE::TYPE00_BULLET, 60, ShotPos, GetRot(), Move, D3DXVECTOR3(1.0f, 1.0f, 1.0f));
		pAttackPlayer->SetUseInteria(false);
		pAttackPlayer->SetAutoSubLife(true);
	}

}
//===================================================================================================================


//*******************************************************************************************************************
//ダイブクラス
//*******************************************************************************************************************

//===============================================================
//コンストラクタ
//===============================================================
CPlayerDive::CPlayerDive()
{

}
//===================================================================================================================

//===============================================================
//デストラクタ
//===============================================================
CPlayerDive::~CPlayerDive()
{

}
//===================================================================================================================

//===============================================================
//初期化処理
//===============================================================
HRESULT CPlayerDive::Init()
{
	CPlayer_ActionMode::Init();
	return S_OK;
}
//===================================================================================================================

//===============================================================
//終了処理
//===============================================================
void CPlayerDive::Uninit()
{
	CPlayer_ActionMode::Uninit();
}
//===================================================================================================================

//===============================================================
//更新処理
//===============================================================
void CPlayerDive::Update()
{
	CPlayer_ActionMode::Update();
}
//===================================================================================================================

//===============================================================
//描画処理
//===============================================================
void CPlayerDive::Draw()
{
	CPlayer_ActionMode::Draw();
}
//===================================================================================================================

//===============================================================
//死亡フラグ設定処理
//===============================================================
void CPlayerDive::SetDeath()
{
	CPlayer_ActionMode::SetDeath();
}
//===================================================================================================================

//===============================================================
//死亡フラグ設定処理
//===============================================================
CPlayerDive* CPlayerDive::Create(const CObject2D::POLYGONTYPE PolygonType, D3DXCOLOR col, const D3DXVECTOR3 Pos, const float fWidth, const float fHeight)
{
	CPlayerDive* pPlayerDive = DBG_NEW CPlayerDive;
	CTexture* pTexture = CManager::GetTexture();
	pPlayerDive->Init();//初期化処理
	pPlayerDive->SetUseLife(false, 1, 1);//体力を使用しない
	pPlayerDive->SetPos(Pos);       //位置
	pPlayerDive->SetSupportPos(Pos);//支点位置
	pPlayerDive->SetInfo(1, 1, fWidth, fHeight, col, PolygonType, true);//ポリゴンとテクスチャ情報を設定
	pPlayerDive->SetTextureIndex(pTexture->Regist("data\\TEXTURE\\UI\\Dive_000.png"));//テクスチャの登録と番号の設定
	pPlayerDive->BindTexture(pTexture->GetAddress(pPlayerDive->GetTextureIndex()));//テクスチャの割り当て
	return pPlayerDive;
}
//===================================================================================================================

//===============================================================
//移動処理
//===============================================================
void CPlayerDive::Move(CPlayer* pPlayer)
{
	CLockon* pLockon = pPlayer->GetLockOn();//ロックオンへのポインタ
	D3DXVECTOR3 Move = CCalculation::Calculation3DVec(pPlayer->GetPos(), pLockon->GetNearRayColObjPos(), 20.0f);

	if (CManager::GetInputKeyboard()->GetTrigger(DIK_J) == true || CManager::GetInputJoypad()->GetRT_Repeat(6) == true)
	{
		pPlayer->SetMove(Move);
	}
}
//===================================================================================================================

