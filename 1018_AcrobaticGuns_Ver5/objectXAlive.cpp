//======================================================================================================================
//
//１０月２１日：生きているオブジェクトXクラスを実装[objectXAlive.cpp]
//Author:ShinaTaiyo
//
//======================================================================================================================

//============================================================
//インクルード
//============================================================
#include "objectXAlive.h"
//======================================================================================================================

//============================================================
//コンストラクタ
//============================================================
CObjectXAlive::CObjectXAlive(int nPriority) : CObjectXMove(nPriority), m_bHitStop(false), m_nHitStopTime(0), m_bAutoSubLife(false), m_nLife(0), m_nMaxLife(0),
m_bIsLanding(false), m_bIsWalling(false), m_bIsJumping(false), m_bUseRatioLifeAlpha(false)
{

}
//======================================================================================================================

//============================================================
//デストラクタ
//============================================================
CObjectXAlive::~CObjectXAlive()
{

}
//======================================================================================================================

//============================================================
//初期化処理
//============================================================
HRESULT CObjectXAlive::Init()
{
	//===========================================
   //体力関係
   //===========================================
	m_nLife = 1;                                        //体力
	m_nMaxLife = 1;                                     //最大体力
	//==================================================================================

	//親クラスの初期化処理
	CObjectXMove::Init();
	return S_OK;
}
//======================================================================================================================

//============================================================
//終了処理
//============================================================
void CObjectXAlive::Uninit()
{
	//親クラスの終了処理
	CObjectXMove::Uninit();
}
//======================================================================================================================

//============================================================
//更新処理
//============================================================
void CObjectXAlive::Update()
{
	//==============================================
    //体力を減らす
    //==============================================
	if (m_bAutoSubLife == true)
	{
		m_nLife--;
	}
	//===========================================================

	//==============================================
	//体力の割合で色合いの透明度を変える
	//==============================================
	if (m_bUseRatioLifeAlpha == true)
	{
		float fRatio;
		fRatio = float(m_nLife) / float(m_nMaxLife);
		SetColor(D3DXCOLOR(0.0f, 0.0f, 0.0f, fRatio), 3, true, true);
	}
	//===========================================================

	//==============================================
	//ヒットストップ処理
	//==============================================
	HitStopProcess();
	//===========================================================

	//親クラスの更新処理
	CObjectXMove::Update();

}
//======================================================================================================================

//============================================================
//描画処理
//============================================================
void CObjectXAlive::Draw()
{
	//親クラスの描画処理
	CObjectXMove::Draw();
}
//======================================================================================================================

//============================================================================
//ダメージを与える
//============================================================================
void CObjectXAlive::SetDamage(int nDamage, int nHitStopTime)
{
	if (m_bHitStop == false && nDamage > 0)
	{//ヒットストップ状態じゃなければ
		m_bHitStop = true;              //ヒットストップ状態にする
		m_nHitStopTime = nHitStopTime;  //ヒットストップ時間
		for (int nCnt = 0; nCnt < 3; nCnt++)
		{
			D3DXVECTOR3 Pos = CObjectX::GetPos();//位置を取得
			//CParticle::Create(50, 30.0f, 30.0f, Pos, D3DXVECTOR3(sinf(fRandRot) * fRandSpeed, cosf(fRandRot) * fRandSpeed, 0.0f), D3DXCOLOR(1.0f, 0.0f, 0.0f, 1.0f));
		}
		m_nLife -= nDamage;
	}
}
//================================================================================================================================================

//============================================================================
//回復量を割り当てる
//============================================================================
void CObjectXAlive::SetHeal(int nHeal, D3DXCOLOR col, float fWidth, float fHeight)
{
	m_nLife += nHeal;
}
//================================================================================================================================================


//================================================
//ヒットストップの処理
//================================================
void CObjectXAlive::HitStopProcess()
{
	if (m_bHitStop == true)
	{
		if (m_nHitStopTime > 0)
		{
			m_nHitStopTime--;
		}
		else
		{//ヒットストップ解除
			m_bHitStop = false;
			m_nHitStopTime = 0;
		}
	}
}
//================================================================================================================================================
