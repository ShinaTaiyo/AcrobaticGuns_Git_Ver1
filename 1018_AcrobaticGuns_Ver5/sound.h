//=============================================================================
//
// サウンド処理 [sound.h]
// Author : AKIRA TANAKA
//
//=============================================================================
#ifndef _SOUND_H_
#define _SOUND_H_

#include "main.h"

//==============================================================================
//サウンドクラス
//==============================================================================
class CSound
{
public:
	//==============================================================================
	// サウンド一覧
    //==============================================================================
	typedef enum
	{
		SOUND_LABEL_BGM_NOESIS,       //Noesis
		SOUND_LABEL_MAX,
	} SOUND_LABEL;
	//=================================================================================================================================

	//*****************************************************************************
	// プロトタイプ宣言
	//*****************************************************************************
	CSound();                            //コンストラクタ
	~CSound();                           //デストラクタ
	HRESULT InitSound(HWND hWnd);        //初期化処理
	void UninitSound(void);              //終了処理
	HRESULT PlaySound(SOUND_LABEL label);//サウンド再生処理
	void StopSound(SOUND_LABEL label);   //サウンドストップ処理
	void StopSound(void);                //サウンドストップ処理（オーバーロード）
	//=================================================================================================================================

private:
	//*****************************************************************************
	// プロトタイプ宣言
	//*****************************************************************************
	HRESULT CheckChunk(HANDLE hFile, DWORD format, DWORD* pChunkSize, DWORD* pChunkDataPosition);
	HRESULT ReadChunkData(HANDLE hFile, void* pBuffer, DWORD dwBuffersize, DWORD dwBufferoffset);
	//=================================================================================================================================

		//*****************************************************************************
        // サウンド情報の構造体定義
        //*****************************************************************************
		typedef struct
		{
			const char* pFilename;	// ファイル名
			int nCntLoop;		// ループカウント
		} SOUNDINFO;

		//*****************************************************************************
		// グローバル変数
		//*****************************************************************************
		IXAudio2* m_pXAudio2 = NULL;								// XAudio2オブジェクトへのインターフェイス!
		IXAudio2MasteringVoice* m_pMasteringVoice = NULL;			// マスターボイス!
		IXAudio2SourceVoice* m_apSourceVoice[SOUND_LABEL_MAX] = {};	// ソースボイス!
		BYTE* m_apDataAudio[SOUND_LABEL_MAX] = {};					// オーディオデータ!
		DWORD m_aSizeAudio[SOUND_LABEL_MAX] = {};					// オーディオデータサイズ!

		// サウンドの情報
		static constexpr SOUNDINFO m_aSoundInfo[SOUND_LABEL_MAX] =
		{
			{"data/BGM/TitleBgm_Noesis.wav", -1},   //Noesis
		};

};

#endif
